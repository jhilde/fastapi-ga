# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 .
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-3.11
        path: junit/test-results.xml
        # Use always() to always run this step to publish test results when there are test failures
    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        # A list of JUnit XML files, directories containing the former, and wildcard
        # patterns to process.
        # See @actions/glob for supported patterns.
        path: junit/test-results.xml

        # Add a summary of the results at the top of the report
        # Default: true
        summary: true

        # Select which results should be included in the report.
        # Follows the same syntax as
        # `pytest -r`
        # Default: fEX
        display-options: fEX

    # Fail the workflow if no JUnit XML was found.
    # Default: true
    fail-on-empty: true
    - name: Security scan with bandit
      run: |
        bandit -c bandit.yaml -r .
